name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # runs on multiple runners depending on matrix
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            runs_on: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - name: linux-arm64
            runs_on: ubuntu-latest
            goos: linux
            goarch: arm64
            ext: ""
          - name: windows-amd64
            runs_on: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
          - name: darwin-amd64
            runs_on: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""

    runs-on: ${{ matrix.runs_on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Determine version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=dev-${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi
          echo "COMMIT=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - name: Build
        env:
          VERSION: ${{ env.VERSION }}
          COMMIT: ${{ env.COMMIT }}
          BUILD_DATE: ${{ env.BUILD_DATE }}
        run: |
          mkdir -p release
          OUT=release/${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.VERSION }}${{ matrix.ext }}
          LDFLAGS="-s -w -X main.Version=${{ env.VERSION }} -X main.Commit=${{ env.COMMIT }} -X main.BuildDate=${{ env.BUILD_DATE }}"
          echo "Building $OUT"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags "$LDFLAGS" -o "$OUT" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.VERSION }}
          path: release/*

